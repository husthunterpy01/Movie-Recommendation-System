/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.moviemanagementsystem.ai;


import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.util.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.jar.Attributes.Name;
import static javax.management.Query.value;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author user
 */
public class MovieInformationAdmin extends javax.swing.JFrame {
    private ImageIcon format = null;
    String ImgPath = null;
    String path;
    public MovieInformationAdmin(String Name) {
        initComponents();
        setLocationRelativeTo(null);
    }
    public boolean checkInputs(){
        if(
           txtMovieName.getText()==null
           ||txtMovieType.getText()==null
           ||txtMovieDescription.getText()==null
        ){
        return false;
    }
        else{
            try{
                return true;
            }catch(Exception e){
                return false;
            }
        }
    }
    public ImageIcon ResizeImage(String imagePath, byte[] pic){
        ImageIcon myImage = null;
        if(imagePath != null){
            myImage = new ImageIcon(imagePath);
        }else{
            myImage = new ImageIcon(pic);
        }
        Image img = myImage.getImage();
        Image img2 = img.getScaledInstance(jblimage.getWidth(), jblimage.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(img2);
        return image;
    }
 public void loadMovie(String id){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql ="SELECT * FROM movies WHERE Id = '"+ id +"'";
            
            PreparedStatement pstmt = connn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()){
                txtMovieName.setText(rs.getString("Name"));
                txtMovieType.setText(rs.getString("Type"));
                txtMovieDescription.setText(rs.getString("Description"));
                txtMovieRate.setText(rs.getString("Rate"));
                //txtFileName.setText(rs.getString("ImgUrl"));
                txtMovieId.setText(rs.getString("Id"));
                byte[] imagedata = rs.getBytes("ImgUrl");
                format = new ImageIcon(imagedata);
                Image mm = format.getImage();
                Image img2=mm.getScaledInstance(jblimage.getWidth(),jblimage.getHeight(),Image.SCALE_SMOOTH);
                ImageIcon image = new ImageIcon(img2);
                jblimage.setIcon(image);
                
            }
            rs.close();
            pstmt.close();
            connn.close();
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,e);
            e.printStackTrace();
        }
        
 }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jblimage = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMovieName = new javax.swing.JTextField();
        txtMovieType = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMovieDescription = new javax.swing.JTextArea();
        updateButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtMovieRate = new javax.swing.JTextField();
        chooseBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtMovieId = new javax.swing.JTextField();
        modifiedBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Name");

        jLabel3.setText("Type");

        jLabel4.setText("Description");

        txtMovieDescription.setColumns(20);
        txtMovieDescription.setRows(5);
        jScrollPane1.setViewportView(txtMovieDescription);

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Rate");

        chooseBtn.setText("Choose ");
        chooseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        modifiedBtn.setText("Modified History");
        modifiedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifiedBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateButton)
                .addGap(179, 179, 179))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jblimage, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(chooseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtMovieRate, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMovieName, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                .addComponent(txtMovieType, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                .addComponent(txtMovieId))
                            .addComponent(modifiedBtn))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMovieType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtMovieRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtMovieId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jblimage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseBtn)
                    .addComponent(modifiedBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(updateButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String getCurrentStatus(String id){
        String status ="";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql ="SELECT Modified_by FROM movies WHERE Id = ?";
            PreparedStatement pstmt = connn.prepareStatement(sql);
            pstmt.setString(1, id);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
                status = rs.getString("Modified_by");
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,e);
            e.printStackTrace();
        }
        return status;
    }
    private String getCurrentAction(String id){
        String status ="";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql ="SELECT Action FROM admin WHERE Username = ?";
            PreparedStatement pstmt = connn.prepareStatement(sql);
            pstmt.setString(1, id);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
                status = rs.getString("Action");
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,e);
            e.printStackTrace();
        }
        return status;
    }    private String getUsername(){
        String value=null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql ="SELECT Username FROM Temp LIMIT 1";
            PreparedStatement pstmt = connn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
                value = rs.getString("Username");
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,e);
            e.printStackTrace();
        }
        return value;
    }
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
         String value1 = txtMovieName.getText();   
         String value2 = txtMovieType.getText();  
         String value3 = txtMovieDescription.getText(); 
         String value4 = txtMovieRate.getText();
         String value5 = txtMovieId.getText();
     
        try{
         
         
         Class.forName("com.mysql.jdbc.Driver");
         String url = "jdbc:mysql://localhost/ktpm3";
         String userName = "root";
         String password = "";
         Connection connn =DriverManager.getConnection(url, userName, password);
         String sql = "UPDATE movies SET Name='"+value1+"', Type='"+value2+"',Description='"+value3+"',Rate='"+value4+"' WHERE Id='"+value5+"'";
         PreparedStatement pstmt = connn.prepareStatement(sql);
         pstmt.execute(sql);
         JOptionPane.showMessageDialog(null, "Updated");
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,e);
            e.printStackTrace();
        }
        
        try{
            File file = new File(path);
            FileInputStream fis = new FileInputStream(file);
            byte [] image = new byte[(int)file.length()];
            fis.read(image);
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql = "UPDATE movies SET ImgUrl = ? WHERE Id = '"+value5+"'";
            PreparedStatement pstmt = connn.prepareStatement(sql);
            pstmt.setBytes(1,image);
            pstmt.executeUpdate();
            pstmt.close();
            JOptionPane.showMessageDialog(null, "Image Updated");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"No image updated");
        }
        try{
            Date now = new Date();
            SimpleDateFormat dateForm = new SimpleDateFormat("MM/dd/YYYY hh:mm:ss a");
            
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql = "UPDATE movies SET Modified_by = ? WHERE Id = '"+value5+"'";
            PreparedStatement pstmt = connn.prepareStatement(sql);
            pstmt.setString(1, getCurrentStatus(value5) + dateForm.format(now) + " modified by " + getUsername() +"\n");
            pstmt.executeUpdate();
            pstmt.close();
            JOptionPane.showMessageDialog(null, "Status Updated");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        try{
            Date now = new Date();
            SimpleDateFormat dateForm = new SimpleDateFormat("MM/dd/YYYY hh:mm:ss a");
            
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql = "UPDATE admin SET Action = ? WHERE Username = '"+getUsername()+"'";
            PreparedStatement pstmt = connn.prepareStatement(sql);
            pstmt.setString(1, getCurrentAction(getUsername()) + dateForm.format(now) + " modified movie : " + value1 +"\n");
            pstmt.executeUpdate();
            pstmt.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
         
         
    
    }//GEN-LAST:event_updateButtonActionPerformed

    private void chooseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseBtnActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.images","jpg","png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = file.getSelectedFile();
            path = selectedFile.getAbsolutePath();
            jblimage.setIcon(ResizeImage(path, null));
        }
        else{
            System.out.println("No File Selected");
        }
    }//GEN-LAST:event_chooseBtnActionPerformed

    private void modifiedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifiedBtnActionPerformed
        String id = txtMovieId.getText(); 
        ShowModifiedFrame mod = new ShowModifiedFrame();
        mod.modified(id);
        mod.setVisible(true);
        mod.setDefaultCloseOperation(mod.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_modifiedBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieInformationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieInformationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieInformationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieInformationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
*/
        /* Create and display the form */
    //    java.awt.EventQueue.invokeLater(new Runnable() {
     //       public void run() {
    //            new MovieInformationFrame().setVisible(true);
    //        }
     //   });
    //}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jblimage;
    private javax.swing.JButton modifiedBtn;
    private javax.swing.JTextArea txtMovieDescription;
    private javax.swing.JTextField txtMovieId;
    private javax.swing.JTextField txtMovieName;
    private javax.swing.JTextField txtMovieRate;
    private javax.swing.JTextField txtMovieType;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}

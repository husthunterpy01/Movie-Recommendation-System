/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.moviemanagementsystem.ai;

import com.mycompany.moviemanagementsystem.dao.AdminDao;
import com.mycompany.moviemanagementsystem.dao.UserDao;
import com.mycompany.moviemanagementsystem.helper.DataValidator;
import com.mycompany.moviemanagementsystem.helper.MessageDialogHelper;
import com.mycompany.moviemanagementsystem.model.AdminModel;
import com.mycompany.moviemanagementsystem.model.UserModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author user
 */
public class AdminJDialog extends javax.swing.JDialog {

    /**
     * Creates new form AdminJDialog
     */
    public AdminJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        adminTXT = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        passwordTXT = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Admin Name");

        jLabel2.setText("Password");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loginButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(cancelButton))
                    .addComponent(jLabel1)
                    .addComponent(adminTXT)
                    .addComponent(jLabel2)
                    .addComponent(passwordTXT))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adminTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(cancelButton))
                .addContainerGap(122, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(adminTXT, sb, "username can not be empty");
        DataValidator.validateEmpty(passwordTXT, sb, "password can not be empty");
        if(sb.length()>0){
            MessageDialogHelper.showErrorDialog(this, sb.toString(),"Error");
            return;
        }
        AdminDao dao = new AdminDao();
        try{
            AdminModel um = dao.checkLogin(adminTXT.getText(),new String(passwordTXT.getPassword()));
            if(um==null){
                MessageDialogHelper.showErrorDialog(this, "Wrong username or password", "Error");
            }else{
                this.dispose();
                clearTable();
                saveTemp();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            MessageDialogHelper.showErrorDialog(this, ex.getMessage(), "Error");
        }
    }//GEN-LAST:event_loginButtonActionPerformed
  private void saveTemp (){
            try {
                String name = adminTXT.getText();
                Class.forName("com.mysql.jdbc.Driver");
                String url = "jdbc:mysql://localhost/ktpm3";
                String userName = "root";
                String password = "";
                Connection connn =DriverManager.getConnection(url, userName, password);
                String sql ="INSERT INTO Temp VALUE ('"+name+"') ";
                PreparedStatement pstmt = connn.prepareStatement(sql);
                pstmt.execute();


            }catch (Exception e){
                JOptionPane.showMessageDialog(null,e);
                e.printStackTrace();
            }
        }
    private void clearTable(){
        try {
                Class.forName("com.mysql.jdbc.Driver");
                String url = "jdbc:mysql://localhost/ktpm3";
                String userName = "root";
                String password = "";
                Connection connn =DriverManager.getConnection(url, userName, password);
                String sql ="truncate Temp";
                PreparedStatement pstmt = connn.prepareStatement(sql);
                pstmt.execute();
            }catch (Exception e){
                JOptionPane.showMessageDialog(null,e);
                e.printStackTrace();
            }
    }
    /**
     * @param args the command line arguments
     */
     public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run(){}
        });
    }//ion - do not modify
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adminTXT;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordTXT;
    // End of variables declaration//GEN-END:variables
}

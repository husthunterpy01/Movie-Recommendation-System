/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.moviemanagementsystem.ai;

import com.mycompany.moviemanagementsystem.helper.DataValidator;
import com.mycompany.moviemanagementsystem.helper.MessageDialogHelper;
import com.mycompany.moviemanagementsystem.ui.RegisterFrame;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.ZonedDateTime;
import java.util.Calendar;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author user
 */
public class AddMovieFrame extends javax.swing.JFrame {

    private ImageIcon format = null;
    String ImgPath = null;
    String path;
    public AddMovieFrame() {
        initComponents();
        setLocationRelativeTo(null);
    }
    public ImageIcon ResizeImage(String imagePath, byte[] pic){
        ImageIcon myImage = null;
        if(imagePath != null){
            myImage = new ImageIcon(imagePath);
        }else{
            myImage = new ImageIcon(pic);
        }
        Image img = myImage.getImage();
        Image img2 = img.getScaledInstance(jblimage.getWidth(), jblimage.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(img2);
        return image;
    }
    String url = "jdbc:mysql://localhost/ktpm3";
    String DBuserName = "root";
    String DBpassword = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        nameTXT = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        genreTXT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rateTXT = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTXT = new javax.swing.JTextArea();
        addBTN = new javax.swing.JButton();
        jblimage = new javax.swing.JLabel();
        chooseBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Name");

        jLabel3.setText("Type");

        jLabel4.setText("Rate");

        descriptionTXT.setColumns(20);
        descriptionTXT.setRows(5);
        jScrollPane1.setViewportView(descriptionTXT);

        addBTN.setText("Add");
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });

        chooseBtn.setText("Choose");
        chooseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Description");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jblimage, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chooseBtn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameTXT, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(rateTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genreTXT))
                        .addGap(85, 85, 85))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(addBTN)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genreTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rateTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(jblimage, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chooseBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(addBTN)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private int getRandomId(){
        Random id = new Random();
        int number;
        number = id.nextInt();
        return number;
    }
 
    private String getUsername(){
        String value=null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql ="SELECT Username FROM Temp LIMIT 1";
            PreparedStatement pstmt = connn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
                value = rs.getString("Username");
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,e);
            e.printStackTrace();
        }
        return value;
    }
    private String getCurrentStatus(String id){
        String status ="";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql ="SELECT Modified_by FROM movies WHERE Id = ?";
            PreparedStatement pstmt = connn.prepareStatement(sql);
            pstmt.setString(1, id);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
                status = rs.getString("Modified_by");
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,e);
            e.printStackTrace();
        }
        return status;
    }
    private String getCurrentAction(String id){
        String status ="";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql ="SELECT Action FROM admin WHERE Username = ?";
            PreparedStatement pstmt = connn.prepareStatement(sql);
            pstmt.setString(1, id);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
                status = rs.getString("Action");
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,e);
            e.printStackTrace();
        }
        return status;
    }
    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        StringBuilder sb = new StringBuilder();
        //DataValidator.validateEmpty(idTXT, sb, "movie id can not be empty");
        DataValidator.validateEmpty(nameTXT, sb, "movie name can not be empty");
        DataValidator.validateEmpty(genreTXT, sb, "genre can not be empty");
        DataValidator.validateEmpty(rateTXT, sb, "movie rate can not be empty");        
        if(sb.length()>0){
            MessageDialogHelper.showErrorDialog(this, sb.toString(),"Error");
            return;
        }
        if(sb.length()>0){
            MessageDialogHelper.showErrorDialog(this, sb.toString(),"Error");
            return;
        }
        //String id = idTXT.getText();
        String movie = nameTXT.getText();
        String genre = genreTXT.getText();
        String des = descriptionTXT.getText();
        String rate = rateTXT.getText();
        
        int id = getRandomId();
        if(!checkMovie(movie)){
            if(!checkId(id)){
            PreparedStatement pss;
            ResultSet set;
            String registerQuery = "insert into movies(Id, Name, Type, Description, Rate, ImgUrl, Added_by, Modified_by) value (?,?,?,?,?,?,?,?)";
            try{
                File file = new File(path);
                FileInputStream fis = new FileInputStream(file);
                byte [] image = new byte[(int)file.length()];
                fis.read(image);
                Class.forName("com.mysql.jdbc.Driver");
                Connection connect =DriverManager.getConnection(url, DBuserName, DBpassword);
                pss = connect.prepareStatement(registerQuery);
                String x = String.valueOf(id);
                for(int i=0; i<100000; i++){
                    if(!checkId(id)){
                        x = String.valueOf(id);
                        break;
                    }
                    id = getRandomId();
                }
                
                pss.setString(1,x);
                pss.setString(2,movie);
                pss.setString(3,genre);
                pss.setString(4,des);
                pss.setString(5,rate);
                pss.setBytes(6,image);
                pss.setString(7, getUsername());
                pss.setString(8, "");
                
                if(pss.executeUpdate()!=0){
                    JOptionPane.showMessageDialog(null, "Movie has been created");
                    try{
                    java.util.Date now = new java.util.Date();
                    SimpleDateFormat dateForm = new SimpleDateFormat("MM/dd/YYYY hh:mm:ss a");
                    String time = dateForm.format(now);
                    Class.forName("com.mysql.jdbc.Driver");
                    String url = "jdbc:mysql://localhost/ktpm3";
                    String userName = "root";
                    String password = "";
                    Connection connn =DriverManager.getConnection(url, userName, password);
                    String sql ="UPDATE admin set Action = ? WHERE Username = '" + getUsername() + "'";
                    PreparedStatement pstmt = connn.prepareStatement(sql);
                    pstmt.setString(1, getCurrentAction(getUsername()) + dateForm.format(now) + "    Added a movie - " + movie +" \n");
                    pstmt.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Action performed");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Error");
                }
            } catch (Exception e){
                Logger.getLogger(AddMovieFrame.class.getName()).log(Level.SEVERE, null, e);
            }
     
        }
        }
        
    }//GEN-LAST:event_addBTNActionPerformed

    private void chooseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseBtnActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.images","jpg","png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = file.getSelectedFile();
            path = selectedFile.getAbsolutePath();
            jblimage.setIcon(ResizeImage(path, null));
        }
        else{
            System.out.println("No File Selected");
        }
    }//GEN-LAST:event_chooseBtnActionPerformed
     public boolean checkId(int id){
        boolean id_checked = false;
        String x = String.valueOf(id);
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection connect =DriverManager.getConnection(url, DBuserName, DBpassword);
            String checkQuery = "select * from movies where Id = ?";
            PreparedStatement pst = connect.prepareStatement(checkQuery);
            pst.setString(1, x);
            ResultSet reg = pst.executeQuery();
            if(reg.next()){
                id_checked=true;
                JOptionPane.showMessageDialog(null, "This movie id is already taken, choose another one");
            }
            
        } catch (Exception e){
            Logger.getLogger(AddMovieFrame.class.getName()).log(Level.SEVERE, null, e);
        }
        return id_checked;
    }
     public boolean checkMovie(String movie){
        boolean movie_checked = false;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection connect =DriverManager.getConnection(url, DBuserName, DBpassword);
            String checkQuery = "select * from movies where Name = ?";
            PreparedStatement pst = connect.prepareStatement(checkQuery);
            pst.setString(1, movie);
            ResultSet reg = pst.executeQuery();
            if(reg.next()){
                movie_checked=true;
                JOptionPane.showMessageDialog(null, "This movie is already exist, add another one");
            }
            
        } catch (Exception e){
            Logger.getLogger(AddMovieFrame.class.getName()).log(Level.SEVERE, null, e);
        }
        return movie_checked;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddMovieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddMovieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddMovieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddMovieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddMovieFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBTN;
    private javax.swing.JButton chooseBtn;
    private javax.swing.JTextArea descriptionTXT;
    private javax.swing.JTextField genreTXT;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jblimage;
    private javax.swing.JTextField nameTXT;
    private javax.swing.JTextField rateTXT;
    // End of variables declaration//GEN-END:variables
}

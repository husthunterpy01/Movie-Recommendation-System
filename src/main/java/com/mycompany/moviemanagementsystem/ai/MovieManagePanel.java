/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.moviemanagementsystem.ai;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author haicd
 */
public class MovieManagePanel extends javax.swing.JPanel {

    String url = "jdbc:mysql://localhost/ktpm3";
    String userName = "root";
    String password = "";
    String searchText;
    JPanel frame1;
    
    public MovieManagePanel() {
        initComponents();
        initComboBox();
    }
 public void initComboBox(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql = "SELECT COUNT(*) AS `Rows`, `Type` FROM `movies` GROUP BY `Type` ORDER BY `Type`";
            
            PreparedStatement st = connn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            while (rs.next()) {
                genreBoxPanel.addItem(rs.getString("Type"));
            }
            st.close();
            rs.close();
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,e);
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchTXT = new javax.swing.JTextField();
        searchAdmin = new javax.swing.JButton();
        genreBoxPanel = new javax.swing.JComboBox<>();
        viewBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        searchAdmin.setText("Search");
        searchAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAdminActionPerformed(evt);
            }
        });

        viewBtn.setText("View");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(searchTXT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchAdmin))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(genreBoxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchAdmin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genreBoxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewBtn)
                    .addComponent(addBtn)
                    .addComponent(deleteBtn)
                    .addComponent(okButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id", "Movie name"
            }
        ));
        jScrollPane1.setViewportView(searchTable);

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(84, 84, 84))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private String getCurrentAction(String id){
        String status ="";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql ="SELECT Action FROM admin WHERE Username = ?";
            PreparedStatement pstmt = connn.prepareStatement(sql);
            pstmt.setString(1, id);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
                status = rs.getString("Action");
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,e);
            e.printStackTrace();
        }
        return status;
    }
    private String getUsername(){
        String value=null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql ="SELECT Username FROM Temp LIMIT 1";
            PreparedStatement pstmt = connn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
                value = rs.getString("Username");
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,e);
            e.printStackTrace();
        }
        return value;
    }
    private void autoDisplay(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection connect =DriverManager.getConnection(url, userName, password);
            String searchQuery = "select Id, Name from movies";
            PreparedStatement pst = connect.prepareStatement(searchQuery);
            ResultSet rsSearch = pst.executeQuery();
            searchTable.setModel(DbUtils.resultSetToTableModel(rsSearch));
            
        } catch (Exception e){
            e.printStackTrace();
        }
    }
    private void searchAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAdminActionPerformed
        try{
            Class.forName("com.mysql.jdbc.Driver");
            searchText = searchTXT.getText();
            Connection connect =DriverManager.getConnection(url, userName, password);
            String searchQuery = "select Id, Name from movies where Name like '" + searchText + "%'";
            PreparedStatement pst = connect.prepareStatement(searchQuery);
            ResultSet rsSearch = pst.executeQuery();
            searchTable.setModel(DbUtils.resultSetToTableModel(rsSearch));
            
        } catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchAdminActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        int row = searchTable.getSelectedRow();
        String id = (searchTable.getModel().getValueAt(row,0).toString());
        MovieInformationAdmin du = new MovieInformationAdmin(id);
        du.loadMovie(id);
        du.setVisible(true);
        du.setDefaultCloseOperation(du.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_viewBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int row = searchTable.getSelectedRow();
        String value = searchTable.getModel().getValueAt(row, 0).toString();
        String movieName ="";
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection connect =DriverManager.getConnection(url, userName, password);
            
            String deleteQuery = "select Name from movies where Id="+value;
            PreparedStatement pss = connect.prepareStatement(deleteQuery); 
            ResultSet rs = pss.executeQuery();
            while(rs.next()){
                movieName = rs.getString("Name");
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error");
        }
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection connect =DriverManager.getConnection(url, userName, password);
            
            String deleteQuery = "delete from movies where Id="+value;
            PreparedStatement psDel = connect.prepareStatement(deleteQuery); 
            psDel.execute();
            JOptionPane.showMessageDialog(null, "Deleted");
            autoDisplay();
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error");
        }
        try{
            Date now = new Date();
            SimpleDateFormat dateForm = new SimpleDateFormat("MM/dd/YYYY hh:mm:ss a");
            
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost/ktpm3";
            String userName = "root";
            String password = "";
            Connection connn =DriverManager.getConnection(url, userName, password);
            String sql = "UPDATE admin SET Action = ? WHERE Username = '"+getUsername()+"'";
            PreparedStatement pstmt = connn.prepareStatement(sql);
            pstmt.setString(1, getCurrentAction(getUsername()) + dateForm.format(now) + " deleted movie : " + movieName +"\n");
            pstmt.executeUpdate();
            pstmt.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed

        AddMovieFrame du = new AddMovieFrame();
        du.setVisible(true);
        du.setDefaultCloseOperation(du.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_addBtnActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        String from = (String) genreBoxPanel.getSelectedItem();
        try{
        Class.forName("com.mysql.jdbc.Driver");
        String url = "jdbc:mysql://localhost/ktpm3";
        String userName = "root";
        String password = "";
        Connection connn =DriverManager.getConnection(url, userName, password);
        String sql = "SELECT Id, Name FROM movies WHERE Type ='"+ from +"'";
        PreparedStatement pstmt = connn.prepareStatement(sql);
        ResultSet rs = pstmt.executeQuery();
        String name1 ="";
        int i = 0;
        searchTable.setModel(DbUtils.resultSetToTableModel(rs));
        while (rs.next()){
            name1=rs.getString("Name");
        }
        }catch (Exception e){
                JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();
                }
    }//GEN-LAST:event_okButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        autoDisplay();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JComboBox<String> genreBoxPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JButton searchAdmin;
    private javax.swing.JTextField searchTXT;
    private javax.swing.JTable searchTable;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
